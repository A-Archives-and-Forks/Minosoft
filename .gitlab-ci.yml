image: azul/zulu-openjdk-alpine:11-latest

stages:
  - create
  - build
  - test
  - package
  - publish


.gradle:
  image: azul/zulu-openjdk-alpine:21-latest
  variables:
    GRADLE_USER_HOME: $CI_PROJECT_DIR/.home
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  cache:
    - key: "$CI_COMMIT_SHA"
      paths:
        - build
        - .gradle
    - key:
        files:
          - "build.gradle.kts"
          - "gradle.properties"
      paths:
        - .home/caches
    - key:
        files:
          - "gradle/wrapper/gradle-wrapper.properties"
      paths:
        - .home/wrapper

cache:
  - key: "$CI_COMMIT_SHA"
    paths:
      - build
      - .gradle
  - key:
      files:
        - "build.gradle.kts"
        - "gradle.properties"
    paths:
      - $GRADLE_USER_HOME/caches
  - key:
      files:
        - "gradle/wrapper/gradle-wrapper.properties"
    paths:
      - $GRADLE_USER_HOME/wrapper

create:
  stage: create
  image: alpine:latest
  script:
    - apk add git curl
    - ./release/create.sh
  only:
    - master

build:
  extends: .gradle
  stage: build
  script: ./gradlew --build-cache assemble -Pminosoft.updates=true
  only:
    - master
    - merge_requests

test:
  extends: .gradle
  stage: test
  script: ./gradlew test
  only:
    - master
    - merge_requests
  artifacts:
    when: always
    reports:
      junit: build/test-results/**/TEST-*.xml

integration test:
  extends: .gradle
  stage: test
  script: ./gradlew integrationTest
  only:
    - master
    - merge_requests
  cache:
    - key: "$CI_COMMIT_SHA"
      paths:
        - build
        - .gradle
    - key:
        files:
          - "build.gradle.kts"
          - "gradle.properties"
      paths:
        - .home/caches
    - key:
        files:
          - "gradle/wrapper/gradle-wrapper.properties"
      paths:
        - .home/wrapper
    - key:
        "minosoft-assets"
      paths:
        - ./it

  artifacts:
    when: always
    reports:
      junit: build/test-results/**/TEST-*.xml

package:
  extends: .gradle
  stage: package
  script:
    - ./gradlew fatJar upload --stacktrace -Pminosoft.updates=true
  only:
    - master
  artifacts:
    paths:
      - build/libs/minosoft-fat-*.jar
    expire_in: 1 days

publish:
  stage: publish
  image: alpine:latest
  script:
    - apk add git curl
    - ./release/release.sh
  only:
    - master
